<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yangjiao.mapper.QuestionnaireMapper">
    <resultMap id="questionnaireMap" type="questionnaire">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="passwordRequired" column="password_required"/>
        <result property="password" column="password"/>
        <result property="ipLimit" column="ip_limit"/>
        <result property="belongOrganization" column="belong_organization"/>
        <result property="url" column="url"/>
        <result property="state" column="state"/>
        <result property="createTime" column="create_time"/>
        <result property="startTime" column="start_time"/>
        <result property="endTime" column="end_time"/>
    </resultMap>
    <delete id="deleteById">
        delete
        from questionnaire
        where id = #{id}
    </delete>

    <select id="selectById" resultMap="questionnaireMap">
        select id,
               user_id,
               title,
               description,
               password_required,
               password,
               ip_limit,
               belong_organization,
               url,
               state,
               create_time,
               start_time,
               end_time
        from questionnaire
        where id = #{id}
    </select>

    <select id="selectAllByUserId" resultMap="questionnaireMap">
        select id,
               user_id,
               title,
               description,
               password_required,
               password,
               ip_limit,
               belong_organization,
               url,
               state,
               create_time,
               start_time,
               end_time
        from questionnaire
        where user_id = #{userId}
    </select>

    <select id="selectAllToBeStart" resultMap="questionnaireMap">
        select id,
               user_id,
               title,
               description,
               password_required,
               password,
               ip_limit,
               belong_organization,
               url,
               state,
               create_time,
               start_time,
               end_time
        from questionnaire
        where now() >= start_time
          and end_time > now()
          and state = 0
    </select>
    <select id="selectAllToBeEnd" resultMap="questionnaireMap">
        select id,
               user_id,
               title,
               description,
               password_required,
               password,
               ip_limit,
               belong_organization,
               url,
               state,
               create_time,
               start_time,
               end_time
        from questionnaire
        where now() >= end_time
          and state = 1
    </select>
    <select id="selectAllInPublic" resultMap="questionnaireMap">
        select id,
               user_id,
               title,
               description,
               password_required,
               password,
               ip_limit,
               belong_organization,
               url,
               state,
               create_time,
               start_time,
               end_time
        from questionnaire
        where (password_required is null or password_required = 0)
          and (belong_organization is null or belong_organization = 0);
    </select>
    <select id="selectByUrl" resultMap="questionnaireMap">
        select id,
               user_id,
               title,
               description,
               password_required,
               password,
               ip_limit,
               belong_organization,
               url,
               state,
               create_time,
               start_time,
               end_time
        from questionnaire
        where url = #{url}
    </select>


    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into questionnaire(user_id, title, description, password_required, password, ip_limit,
                                  belong_organization, url,
                                  state, create_time, start_time, end_time)
        values (#{userId}, #{title}, #{description}, #{passwordRequired}, #{password}, #{ipLimit},
                #{belongOrganization}, #{url},
                #{state}, #{createTime}, #{startTime}, #{endTime})
    </insert>
    <update id="updateStateById">
        update questionnaire
        set state = #{state}
        where id = #{id}
    </update>
    <update id="update">
        update questionnaire
        <set>
            <if test="title != null and title != ''">title = #{title},</if>
            <if test="description != null and description != ''">description = #{description},</if>
            <if test="ipLimit != null">ip_limit = #{ipLimit},</if>
            <if test="belongOrganization != null">belong_organization = #{belongOrganization}</if>
        </set>
        where id = #{id}
    </update>
</mapper>